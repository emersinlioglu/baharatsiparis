<?php

namespace Ffb\Common\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * AbstractAttendeeOwnedEntity
 *
 * This is the parent class for all entities which have an attendee or user as
 * creator and modifier and their respective dates as payload. It is the base
 * class for all entities that contain data that is generated by attendees.
 *
 * Users can create or modify them nonetheless!
 */
abstract class AbstractAttendeeOwnedEntity extends AbstractUserOwnedEntity {

    /**
     * "CREATOR_ATTENDEE_ID" NUMBER(10,0)
     *
     * @var int
     * @ORM\Column(name="creator_attendee_id", type="integer", nullable=true)
     */
    protected $creatorAttendeeId;

    /**
     * "CREATED_ATTENDEE_DATE" DATE
     *
     * @var \DateTime
     * @ORM\Column(name="created_attendee_date", type="datetime", nullable=true)
     */
    protected $createdAttendeeDate;

    /**
     * "MODIFIER_ATTENDEE_ID" NUMBER(10,0)
     *
     * @var int
     * @ORM\Column(name="modifier_attendee_id", type="integer", nullable=true)
     * @todo may be nullable for UserEntity!
     */
    protected $modifierAttendeeId;

    /**
     * "MODIFIED_ATTENDEE_DATE" DATE NOT NULL ENABLE
     *
     * @var \DateTime
     * @ORM\Column(name="modified_attendee_date", type="datetime", nullable=true)
     */
    protected $modifiedAttendeeDate;

    /**
     */
    public function __construct() {

        parent::__construct();

        $this->_exchangeBL = array_merge($this->_exchangeBL, array(
            'creatorAttendeeId',
            'createdAttendeeDate',
            'modifierAttendeeId',
            'modifiedAttendeeDate'
        ));

        // revert default values of inherited AbstractUserOwnedEntity
        // otherwise the foreign key constraints will crash any write operation
        $this->creatorUserId = NULL;
        $this->modifierUserId = NULL;

    }

    /**
     * @return the $creatorAttendeeId
     */
    public function getCreatorAttendeeId() {
        return $this->creatorAttendeeId;
    }

    /**
     * @param number $creatorAttendeeId
     */
    public function setCreatorAttendeeId($creatorAttendeeId) {
        $this->creatorAttendeeId = $creatorAttendeeId;
    }

    /**
     * @return the $createdAttendeeDate
     */
    public function getCreatedAttendeeDate() {
        return $this->createdAttendeeDate;
    }

    /**
     * @param \Ffb\Common\Entity\DateTime $createdAttendeeDate
     */
    public function setCreatedAttendeeDate($createdAttendeeDate) {
        $this->createdAttendeeDate = $createdAttendeeDate;
    }

    /**
     * @return the $modifierAttendeeId
     */
    public function getModifierAttendeeId() {
        return $this->modifierAttendeeId;
    }

    /**
     * @param number $modifierAttendeeId
     */
    public function setModifierAttendeeId($modifierAttendeeId) {
        $this->modifierAttendeeId = $modifierAttendeeId;
    }

    /**
     * @return the $modifiedAttendeeDate
     */
    public function getModifiedAttendeeDate() {
        return $this->modifiedAttendeeDate;
    }

    /**
     * @param \Ffb\Common\Entity\DateTime $modifiedAttendeeDate
     */
    public function setModifiedAttendeeDate($modifiedAttendeeDate) {
        $this->modifiedAttendeeDate = $modifiedAttendeeDate;
    }

    /**
     * One function for Attende and User to simple checks
     *
     * @return integer
     */
    public function getCreatorId() {
        return $this->getCreatorAttendeeId();
    }
}
